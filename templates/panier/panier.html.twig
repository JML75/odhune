{% extends 'base.html.twig' %}

{% block title %}

{% endblock %}
{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset('css/panier.css') }}">


{% endblock %}

{% block content %}
	<main class='col-8 mx-auto d-flex justify-content-between'>

		<div class="panier col-8 d-flex flex-column">
			<div class="basket-module">
				<label for="promo-code">saisir un code promo</label>
				<input id="promo-code" type="text" name="promo-code" maxlength="5" class="promo-code-field">
				<button class="promo-code-cta">Appliquer</button>
			</div>

			<div class="col-12">
				<ul class="col-12 entete">
					<li class="col-1"></li>
					<li class="col-1">description</li>
					<li class="col-1">Prix</li>
					<li class="col-1">Quantité</li>
					<li class="col-1">SousTotal</li>
					<li class="col-1"></li>
				</ul>
			</div>

			<div class="col-12">

				{% set sstotal = 0 %}
				{% for produit in panier %}


					<div class="col-12 ligne">
						<div class="col-2"><img src="{{ asset("img/photoProduitUpload/" ~ produit.nomPhoto) }}" alt="" style="width:100%"></div>
						<div class="col-1">
							<h1>
								<strong>{{ produit.produit.getNom()}}</strong>
							</h1>
							<p>{{ produit.couleur }}</p>
							<p>{{ produit.produit.getRef() }}</p>
						</div>
						<div id = {{ "prix" ~ produit.id_produit }} class=" col-1">{{ produit.prix }}
							€</div>
						<div class=" col-1"><input type="number" value="{{ produit.quantite }}" min="1" class="quantity-field" onchange = "changeQuantity('{{ produit.id_produit }}', this.value )"></div>
						<div id = {{ "sstt" ~ produit.id_produit }} class=" col-1">{{  produit.quantite  * produit.prix }}
							€</div>
						{% set sstotal = sstotal + produit.quantite  * produit.prix %}
						<div class="col-1">
							<button>supprimer</button>
						</div>
					</div>

				{% endfor %}
			</div>


		</div>


		<aside class="col-3">
			<div class="summary">
				<div class="summary-total-items">
					<span class="total-items"></span>
					Items in your Bag</div>
				<div class="summary-subtotal">
					<div class="subtotal-title">Sous total</div>
					<div class="subtotal-value final-value" id="sstotal_panier">{{ sstotal }}</div>
					<div class="summary-promo hide">
						<div class="promo-title">Promotion</div>
						<div class="promo-value final-value" id="basket-promo"></div>
					</div>
				</div>
				<div class="summary-delivery">
					<select id='choix_livraison' name="delivery-collection" onchange='livraison()' class="summary-delivery-selection">
						<option value="0" selected="selected">livraison</option>
						<option value="0">colissimo : gratuit</option>
						<option value="10">chronopost : 10 €</option>
					</select>
					<div class="livraison_cout">
						<p>livraison</p>
						<p id="livraison"></p>
					</div>
				</div>
				<div class="summary-total">
					<div class="total-title">Total</div>
					<div class="total-value final-value" id="total_panier"></div>
				</div>
                 <a class="col-12 mx-auto btn mb-2" href = "{{ path('catalogue') }}"> CONTINUER VOS ACHATS</a>
				<div class="summary-checkout">
					<button class="checkout-cta">Valider votre panier</button>
				</div>

                
                
			</div>
            
            <div>
            </div>
           
		</aside>
	</main>

    <textarea name="" hidden  id="panier2js" cols="30" rows="10">{{ panierstr }}</textarea>

	<div class="example-wrapper"></div>
{% endblock %}

{% block javascripts %}

<script>

var panierstring =  document.querySelector('#panier2js').innerHTML
var panier = JSON.parse(panierstring)
console.log (panier)

var ssTotalPanier = document.querySelector('#sstotal_panier').innerHTML
var cout_livraison = document.querySelector('#livraison').innerHTML
var totalPanier = ssTotalPanier + cout_livraison
document.querySelector('#total_panier').innerHTML = totalPanier

function livraison() {
let livraison = document.getElementById('choix_livraison')
document.getElementById('livraison').innerHTML = livraison.value
totalPanier = parseInt(ssTotalPanier) + parseInt(livraison.value)
document.querySelector('#total_panier').innerHTML = totalPanier
}

function changeQuantity(id_produit, value){
    
    let elementId  = 'prix' + id_produit
    let prixProduit = document.getElementById(elementId).innerHTML
    let ssTotalProduit = parseInt(value) * parseInt(prixProduit)
    console.log (ssTotalProduit)
    document.getElementById('sstt'+id_produit).innerHTML = ssTotalProduit

    let ssttPanier = 0
    for (i=0 ;i< panier.length; i++) {
       let eltId = 'sstt'+ panier[i].id_produit
       ssttPanier = ssttPanier + parseInt(document.getElementById(eltId).innerHTML)
    }
    document.querySelector('#sstotal_panier').innerHTML=ssttPanier
    document.querySelector('#total_panier').innerHTML = ssttPanier + cout_livraison



     let url = "{{ path('panier_changer') }}"
     let data = {
         'id_produit': id_produit,
         'qty': value,
         'delete': false
     }
     $.ajax({
            method: "post",
            url: url,
            data: data,
                success: function(response)
                {
                    console.log("qty changed");
                },
                error: function()
                {
                    alert('erreur');
                }
        })



}



{# function changeQuantity(id_produit, value){
    
    
    
    for (i=0 ; i< panier.length ; i++){
            id = panier[i].id_produit
        if ( id == id_produit){
            panier[i].quantite = value
            idprix = 'prix'+ id_produit
            console.log (idprix)
            console.log (document.querySelector('#prix70c'))
            console.log (prix)


            console.log (panier [i].prix)
            console.log (value)
            console.log (sstotalproduit)
            document.getElementById(id_produit).innerHTML= ""
        }   
    }

     console.log (panier)
} #}


	</script>

	<script>
		/* Set values + misc */
var promoCode;
var promoPrice;
var fadeTime = 300;


/* Assign actions */
$('.quantity input').change(function () {
updateQuantity(this);
});

$('.remove button').click(function () {
removeItem(this);
});

$(document).ready(function () {
updateSumItems();
});

$('.promo-code-cta').click(function () {

promoCode = $('#promo-code').val();

if (promoCode == '10off' || promoCode == '10OFF') { // If promoPrice has no value, set it as 10 for the 10OFF promocode
if (! promoPrice) {
promoPrice = 10;
} else if (promoCode) {
promoPrice = promoPrice * 1;
}
} else if (promoCode != '') {
alert("Invalid Promo Code");
promoPrice = 0;
}
// If there is a promoPrice that has been set (it means there is a valid promoCode input) show promo
if (promoPrice) {
$('.summary-promo').removeClass('hide');
$('.promo-value').text(promoPrice.toFixed(2));
recalculateCart(true);
}
});

/* Recalculate cart */
function recalculateCart(onlyTotal) {
var subtotal = 0;

/* Sum up row totals */
$('.basket-product').each(function () {
subtotal += parseFloat($(this).children('.subtotal').text());
});

/* Calculate totals */
var total = subtotal;

// If there is a valid promoCode, and subtotal < 10 subtract from total
var promoPrice = parseFloat($('.promo-value').text());
if (promoPrice) {
if (subtotal >= 10) {
total -= promoPrice;
} else {
alert('Order must be more than £10 for Promo code to apply.');
$('.summary-promo').addClass('hide');
}
}

/*If switch for update only total, update only total display*/
if (onlyTotal) { /* Update total display */
$('.total-value').fadeOut(fadeTime, function () {
$('#basket-total').html(total.toFixed(2));
$('.total-value').fadeIn(fadeTime);
});
} else { /* Update summary display. */
$('.final-value').fadeOut(fadeTime, function () {
$('#basket-subtotal').html(subtotal.toFixed(2));
$('#basket-total').html(total.toFixed(2));
if (total == 0) {
$('.checkout-cta').fadeOut(fadeTime);
} else {
$('.checkout-cta').fadeIn(fadeTime);
}
$('.final-value').fadeIn(fadeTime);
});
}
}

/* Update quantity */
function updateQuantity(quantityInput) { /* Calculate line price */
var productRow = $(quantityInput).parent().parent();
var price = parseFloat(productRow.children('.price').text());
var quantity = $(quantityInput).val();
var linePrice = price * quantity;

/* Update line price display and recalc cart totals */
productRow.children('.subtotal').each(function () {
$(this).fadeOut(fadeTime, function () {
$(this).text(linePrice.toFixed(2));
recalculateCart();
$(this).fadeIn(fadeTime);
});
});

productRow.find('.item-quantity').text(quantity);
updateSumItems();
}

function updateSumItems() {
var sumItems = 0;
$('.quantity input').each(function () {
sumItems += parseInt($(this).val());
});
$('.total-items').text(sumItems);
}

/* Remove item from cart */
function removeItem(removeButton) { /* Remove row from DOM and recalc cart total */
var productRow = $(removeButton).parent().parent();
productRow.slideUp(fadeTime, function () {
productRow.remove();
recalculateCart();
updateSumItems();
});
}
	</script>


{% endblock %}
